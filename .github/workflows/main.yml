name: Selenium Test Automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-html  # For HTML report generation

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Get Chrome version
        run: |
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
          echo "CHROME_VERSION=$CHROME_VERSION" >> $GITHUB_ENV

      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@v2
        with:
          chromedriver-version: ${{ env.CHROME_VERSION }}

      - name: Install xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: |
          sudo Xvfb :99 -ac &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Verify Chrome and ChromeDriver
        run: |
          echo "Chrome version:"
          google-chrome --version
          echo "ChromeDriver version:"
          chromedriver --version

      - name: Create reports directory
        run: mkdir -p reports

      - name: Run Selenium tests with HTML report
        env:
          DISPLAY: :99
        run: |
          echo "Starting Selenium tests..."
          pytest -s -v tests/test_google.py --html=reports/test_report.html

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()  # Run even if tests fail
        with:
          name: test-reports
          path: reports/
          retention-days: 7

      - name: Check test results
        if: failure()
        run: |
          echo "Tests failed! Check the uploaded report for details."
          echo "Chrome version:"
          google-chrome --version
          echo "ChromeDriver version:"
          chromedriver --version
          echo "Display variable:"
          echo $DISPLAY
          exit 1

      # âœ… Steps for hosting the HTML report on GitHub Pages
      - name: Prepare report for GitHub Pages
        if: always()
        run: |
          mkdir -p public
          cp -r reports/* public/
          ls -la public  # List the contents of the public folder

      - name: Deploy Test Reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages  # Make sure this is `gh-pages`
          allow_empty_commit: true  # Allow empty commits in case no changes
